# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Release Binaries

on:
  push:
    tags:
    - 'v*'
jobs:
  build_linux:
    name: Create all the linux builds
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Prepare yarn install
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - run: yarn install --frozen-lockfile
    - name: Build linux builds
      run: yarn run build
    - uses: ncipollo/release-action@v1
      with:
        artifacts: "./dist_electron/vinutes-*.AppImage, ./dist_electron/vinutes_*.snap"
        bodyFile: "RELEASE.md"
        token: ${{ secrets.GITHUB_TOKEN }}
        commit: "master"
  windows_build:
    name: Create the windows build
    steps:
      - name: Install 7Zip PowerShell Module
        shell: powershell
        run: Install-Module 7Zip4PowerShell -Force -Verbose
      - uses: actions/checkout@v2
      - name: Prepare yarn install
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - run: yarn install --frozen-lockfile
      - name: Build linux builds
        run: yarn run build
      - uses: ncipollo/release-action@v1
        with:
          artifacts: "./dist_electron/vinutes-*.msi, ./dist_electron/vinutes_*.nsis"
          bodyFile: "RELEASE.md"
          token: ${{ secrets.GITHUB_TOKEN }}
          commit: "master"