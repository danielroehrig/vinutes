# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Release Binaries

on:
  push:
    tags:
    - 'v*'
jobs:
  linux_build:
    name: Create all the linux builds
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Prepare yarn install
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - name: Install node packages
      run: yarn install --frozen-lockfile
    - name: Build for linux
      run: yarn run build
    - name: Upload AppImage
      uses: actions/upload-artifact@v2
      with:
        name: linux-appimage
        path: "./dist_electron/vinutes*.AppImage"

  windows_build:
    name: Create the windows build
    runs-on: windows-latest
    steps:
      - name: Install 7Zip PowerShell Module
        shell: powershell
        run: Install-Module 7Zip4PowerShell -Force -Verbose
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Prepare yarn install
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Install node packages
        run: yarn install --frozen-lockfile
      - name: Build for windows
        run: yarn run build
      - name: Upload MSI
        uses: actions/upload-artifact@v2
        with:
          name: windows-msi
          path: "dist_electron\vinutes*.msi"
  create_release:
    name: Package the release
    needs: [linux_build, windows_build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download the windows msi build
        uses: actions/download-artifact@v2
        with:
          name: windows-msi
      - name: Download the linux AppImage
        uses: actions/download-artifact@v2
        with:
          name: linux-appimage
      - name: start the release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "vinutes*.msi, vinutes*.AppImage"
          bodyFile: "RELEASE.md"
          token: ${{ secrets.GITHUB_TOKEN }}
          commit: "master"